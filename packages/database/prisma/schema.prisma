
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Men
  Women
  Kids
}

enum SubCategory {
  Topwear
  Bottomwear
  Winterwear
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

enum ListStatus {
  Active
  Draft
  Sold
}

enum Status {
  Confirmed
  Shipped
  Delivered
  Pending
  Cancelled
}

model Seller{
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  store     String    @unique
  address   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  items     Item[]
  orders    Order[]
}

model Item{
  id            Int        @id   @default(autoincrement())
  adminId       String
  thumnail      String
  title         String
  description   String
  price         Int
  size          Size[]
  orders        Order[]          
  category      Category 
  subCategory   SubCategory
  status        ListStatus  @default(Draft)
  stock         Int         @default(0)
  isAvailable   Boolean     @default(true)
  createdAt     DateTime    @default(now())
  admin         Seller      @relation(fields: [adminId], references: [id])

  @@index([category])
  @@index([subCategory])
}

model Order{
  id          String    @id    @default(uuid())
  itemId      Int
  quantity    Int
  total       Float
  status      Status    @default(Pending)
  placedOn    DateTime  @default(now())
  sellerId    String
  customerId  String
  item        Item      @relation(fields: [itemId], references: [id])
  seller      Seller    @relation(fields: [sellerId], references: [id])
  customer    Customer    @relation(fields: [customerId], references: [id])
}
  // customerId  String
  // customer    Customer  @relation((fields: [customerId], references: [id]))

model Customer{
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  address   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
}